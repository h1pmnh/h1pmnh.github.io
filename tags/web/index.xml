<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>web on A developer's notes in the world of security research and bug bounty, by pmnh</title><link>https://www.pmnh.site/tags/web/</link><description>Recent content in web on A developer's notes in the world of security research and bug bounty, by pmnh</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Copyright Â© 2023, pmnh; all rights reserved.</copyright><lastBuildDate>Fri, 02 Feb 2024 00:00:00 -0400</lastBuildDate><atom:link href="https://www.pmnh.site/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Howto: Use Burp Hackvertor Plugin to Re-sign Requests</title><link>https://www.pmnh.site/post/howto-hackvertor-request-resigning/</link><pubDate>Fri, 02 Feb 2024 00:00:00 -0400</pubDate><guid>https://www.pmnh.site/post/howto-hackvertor-request-resigning/</guid><description>
Summary More and more in modern web applications, particularly sensitive applications such as financial apps, we see the introduction of signature headers which are used to provide some mechanism of tamper-proofing of the request from the client. These signatures can be problematic if using common tools such as Burp Suite or even automated tools such as sqlmap. In this article I describe a technique for recalculating these header values using the excellent Burp Suite plugin Hackvertor and custom tag definitions available in this plugin.</description></item></channel></rss>