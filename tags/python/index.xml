<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on A developer's notes in the world of security research and bug bounty, by pmnh</title><link>https://www.pmnh.site/tags/python/</link><description>Recent content in python on A developer's notes in the world of security research and bug bounty, by pmnh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2023, pmnh; all rights reserved.</copyright><lastBuildDate>Sun, 21 May 2023 00:00:00 -0400</lastBuildDate><atom:link href="https://www.pmnh.site/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>CTF Writeup: 2023 DeadSec CTF: Trailblazer</title><link>https://www.pmnh.site/post/ctf-deadsec-2023-trailblazer/</link><pubDate>Sun, 21 May 2023 00:00:00 -0400</pubDate><guid>https://www.pmnh.site/post/ctf-deadsec-2023-trailblazer/</guid><description>
Summary One of the things that I love about CTFs is when they provide challenges that don't require knowledge of weird language quirks or obscure exploits or (ugh) guesswork but instead just a clear head and some common sense. Kudos to the designer of the DeadSec 2023 CTF Trailblazer challenge, which offered exactly this type of problem.
Recon The Trailblazer challenge provided exactly one page to the site and no source code was provided.</description></item></channel></rss>